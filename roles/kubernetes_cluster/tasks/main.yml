- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: disable swap
  ansible.builtin.command: swapoff -a
  ignore_errors: yes

- name: Remove swap partition from /etc/fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^(?!#).*swap.*$'
    replace: '# \g<0>'

- name: Install containerd
  ansible.builtin.get_url:
    url: https://github.com/containerd/containerd/releases/download/v2.0.3/containerd-2.0.3-linux-amd64.tar.gz
    dest: /tmp/containerd-2.0.3-linux-amd64.tar.gz

- name: Extract containerd tarball
  ansible.builtin.unarchive:
    src: /tmp/containerd-2.0.3-linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes

- name: Create directory for systemd service if it does not exist
  ansible.builtin.file:
    path: /usr/local/lib/systemd/system
    state: directory

- name: containerd as a systemd service
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
    dest: /usr/local/lib/systemd/system/containerd.service
  notify: reload systemd

- name: download runc
  ansible.builtin.get_url:
    url: https://github.com/opencontainers/runc/releases/download/v1.2.5/runc.amd64
    dest: /tmp/runc.amd64
    mode: '0755'

- name: Install runc using install command
  ansible.builtin.command:
    cmd: install -m 755 /tmp/runc.amd64 /usr/local/sbin/runc

- name: download CNI plugins
  ansible.builtin.get_url:
    url: https://github.com/containernetworking/plugins/releases/download/v1.6.2/cni-plugins-linux-amd64-v1.6.2.tgz
    dest: /tmp/cni-plugins-linux-amd64-v1.6.2.tgz

- name: Create directory for CNI if it does not exist
  ansible.builtin.file:
    path: /opt/cni/bin
    state: directory

- name: Extract CNI plugins
  ansible.builtin.unarchive:
    src: /tmp/cni-plugins-linux-amd64-v1.6.2.tgz
    dest: /opt/cni/bin
    remote_src: yes

- name: enable port forwarding
  ansible.builtin.sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    sysctl_set: yes

- name: restart containerd
  ansible.builtin.systemd:
    state: restarted
    name: containerd
    
- name: Check if containerd is working
  ansible.builtin.command:
    cmd: ctr --address /var/run/containerd/containerd.sock info
  register: ctr_info
  ignore_errors: yes

- name: Fail if containerd is not working
  ansible.builtin.fail:
    msg: "Containerd is not working properly."
  when: ctr_info.rc != 0

- name: install prerequisites for kubeadm
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gpg
 
- name: Ensure /etc/apt/keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Kubernetes GPG key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    dest: /tmp/kubernetes-release.key
    mode: '0644'

- name: Check if Kubernetes GPG keyring exists
  ansible.builtin.stat:
    path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: keyring_stat

- name: Add Kubernetes GPG key to keyring
  ansible.builtin.command: 
    cmd: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-release.key
  become: yes
  when: keyring_stat.stat.exists == false
  
- name: Ensure /etc/apt/sources.list.d directory exists
  ansible.builtin.file:
    path: /etc/apt/sources.list.d
    state: directory
    mode: '0755'

- name: Add Kubernetes repository to sources list
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /'
    create: yes
    mode: '0644'
  become: yes

- name: apt install kubeadm, kubelet, and kubectl
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - kubeadm
    - kubelet
    - kubectl

- name: enable kubelet service
  ansible.builtin.systemd:
    name: kubelet
    enabled: yes
    state: restarted

- name: include tasks for master nodes
  include_tasks: master.yml
  when: inventory_hostname in groups['master']

- name: include tasks for worker nodes
  include_tasks: worker.yml
  when: inventory_hostname in groups['workers']
